"""empty message

Revision ID: 523a6826c0a0
Revises: 
Create Date: 2025-09-11 18:41:28.262032

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '523a6826c0a0'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('status_code')
    op.alter_column('admins', 'telegram_id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=True)
    op.alter_column('orders', 'delivery_address',
               existing_type=sa.VARCHAR(),
               nullable=False,
               existing_server_default=sa.text("'Не указано'::character varying"))
    op.alter_column('support_messages', 'user_requests',
               existing_type=sa.VARCHAR(length=1000),
               nullable=False)
    op.alter_column('support_messages', 'user_telegram_id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               nullable=False)
    op.drop_constraint(op.f('support_messages_admin_id_fkey'), 'support_messages', type_='foreignkey')
    op.create_foreign_key(None, 'support_messages', 'users', ['user_telegram_id'], ['telegram_id'])
    op.alter_column('users', 'vip_status',
               existing_type=sa.BOOLEAN(),
               nullable=False,
               existing_server_default=sa.text('false'))
    op.alter_column('users', 'delivery_address',
               existing_type=sa.VARCHAR(),
               nullable=False,
               existing_server_default=sa.text("'Не указано'::character varying"))
    op.alter_column('users', 'email',
               existing_type=sa.VARCHAR(length=50),
               nullable=False,
               existing_server_default=sa.text("'Не указано'::character varying"))
    op.alter_column('users', 'date_registry',
               existing_type=sa.DATE(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_DATE'))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('users', 'date_registry',
               existing_type=sa.DATE(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_DATE'))
    op.alter_column('users', 'email',
               existing_type=sa.VARCHAR(length=50),
               nullable=True,
               existing_server_default=sa.text("'Не указано'::character varying"))
    op.alter_column('users', 'delivery_address',
               existing_type=sa.VARCHAR(),
               nullable=True,
               existing_server_default=sa.text("'Не указано'::character varying"))
    op.alter_column('users', 'vip_status',
               existing_type=sa.BOOLEAN(),
               nullable=True,
               existing_server_default=sa.text('false'))
    op.drop_constraint(None, 'support_messages', type_='foreignkey')
    op.create_foreign_key(op.f('support_messages_admin_id_fkey'), 'support_messages', 'admins', ['admin_id'], ['id'])
    op.alter_column('support_messages', 'user_telegram_id',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               nullable=True)
    op.alter_column('support_messages', 'user_requests',
               existing_type=sa.VARCHAR(length=1000),
               nullable=True)
    op.alter_column('orders', 'delivery_address',
               existing_type=sa.VARCHAR(),
               nullable=True,
               existing_server_default=sa.text("'Не указано'::character varying"))
    op.alter_column('admins', 'telegram_id',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=True)
    op.create_table('status_code',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('status_code_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(length=200), autoincrement=False, nullable=False),
    sa.Column('numeric_value', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='status_code_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('order_statuses',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('order_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('tatus_code_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], name=op.f('order_statuses_order_id_fkey')),
    sa.ForeignKeyConstraint(['tatus_code_id'], ['status_code.id'], name=op.f('order_statuses_tatus_code_id_fkey')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('order_statuses_user_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('order_statuses_pkey'))
    )
    # ### end Alembic commands ###
